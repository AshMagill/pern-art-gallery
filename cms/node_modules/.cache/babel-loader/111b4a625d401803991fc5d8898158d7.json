{"ast":null,"code":"var _jsxFileName = \"/home/thrasher/cms/cms/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"; // components\n\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  async function isAuth() {\n    console.log(\"running isauth\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      console.log(parseRes);\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth();\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/dashboard\",\n            render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n              setAuth: setAuth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/thrasher/cms/cms/src/App.js"],"names":["React","useState","Fragment","useEffect","BrowserRouter","Router","Switch","Route","Redirect","Dashboard","Login","App","isAuthenticated","setIsAuthenticated","setAuth","boolean","isAuth","console","log","response","fetch","method","headers","token","localStorage","parseRes","json","err","error","message","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAO,WAAP;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAKO,kBALP,C,CAOA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMa,OAAO,GAAIC,OAAD,IAAa;AAC3BF,IAAAA,kBAAkB,CAACE,OAAD,CAAlB;AACD,GAFD;;AAIA,iBAAeC,MAAf,GAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AACnEC,QAAAA,MAAM,EAAE,KAD2D;AAEnEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAF0D,OAAzC,CAA5B;AAKA,YAAME,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAA,MAAAA,QAAQ,KAAK,IAAb,GAAoBZ,kBAAkB,CAAC,IAAD,CAAtC,GAA+CA,kBAAkB,CAAC,KAAD,CAAjE;AACD,KATD,CASE,OAAOc,GAAP,EAAY;AACZV,MAAAA,OAAO,CAACW,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;AACF;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM;AACP,GAFQ,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,GAFP;AAGE,YAAA,MAAM,EAAGc,KAAD,IACN,CAAClB,eAAD,gBACE,QAAC,KAAD,OAAWkB,KAAX;AAAkB,cAAA,OAAO,EAAEhB;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADF,gBAGE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,IAAI,EAAC,YAFP;AAGE,YAAA,MAAM,EAAGgB,KAAD,IACNlB,eAAe,gBACb,QAAC,SAAD,OAAekB,KAAf;AAAsB,cAAA,OAAO,EAAEhB;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADa,gBAGb,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA3DQH,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n// components\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n\n  async function isAuth() {\n    console.log(\"running isauth\");\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n\n      const parseRes = await response.json();\n      console.log(parseRes);\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth();\n  });\n\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) =>\n                !isAuthenticated ? (\n                  <Login {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <Dashboard {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}